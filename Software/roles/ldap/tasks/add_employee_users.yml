---

- name: remove sshkey
  action: shell rm {{ sshkey_path }}/sshkey
  ignore_errors: true
  when:
    - usr_pwd == "sshkey"

- name: remove sshkey.pub
  action: shell rm {{ sshkey_path }}/sshkey.pub
  ignore_errors: true
  when:
    - usr_pwd == "sshkey"


- name: generate sshkey
  action: shell yes | ssh-keygen -b 2048 -t rsa -f {{ sshkey_path }}/sshkey -q -N "" && cat {{ sshkey_path }}/sshkey.pub
  register: ssh_pub_key
  when:
    - usr_pwd == "sshkey"

- set_fact: ssh_pub_key={{ ssh_pub_key.stdout }}
  when:
    - usr_pwd == "sshkey"

- name: generate sshkey
  action: shell cat {{ sshkey_path }}/sshkey
  register: ssh_pvt_key
  when:
    - usr_pwd == "sshkey"

- set_fact: ssh_pvt_key={{ ssh_pvt_key.stdout }}
  when:
    - usr_pwd == "sshkey"

- name: generate password
  action: shell date +%s | sha256sum | base64 | head -c 16 ; echo
  register: generated_usr_pwd
  when:
    - usr_pwd == "generate" or usr_pwd == "sshkey"

- set_fact: text_usr_pwd={{ generated_usr_pwd.stdout }}
  when:
    - usr_pwd == "generate" or usr_pwd == "sshkey"

- debug: msg={{ text_usr_pwd }}

- name: generate ldap admin password hash
  command: "/usr/sbin/slappasswd -s {{ text_usr_pwd }}"
  register: slapd_admin_password_hash

- name: get group id
  action: "shell getent group {{ group_name }} | cut -d: -f3"
  register: group_id

- set_fact: usr_gid={{ group_id.stdout }}

- name: add the user
  ldap_entry:
    dn: uid={{ user_name }},ou={{employee_type}},{{ usr_base_dn }}
    objectClass:
      - shadowAccount
      - person
      - organizationalPerson
      - inetOrgPerson
      - posixAccount
      - top
      - ldapPublicKey
    attributes:
      loginShell: "{{ login_shell }}"
#      userPassword: "{MD5}{{ usr_pwd|hash('md5') }}"
      userPassword: "{{ slapd_admin_password_hash.stdout }}"
      sn: "{{ surname }}"
      cn: "{{ user_name }} {{ surname }}"
      gidNumber: "{{ usr_gid }}"
      homeDirectory: "{{sftp_home_partition}}/{{ user_name }}"
      uidNumber: "{{ uid }}"
      displayName: "{{ user_name }} {{ surname }}"
      gecos: "{{ user_name }} {{ surname }}"
      givenName: "{{ user_name }}"
      mail: "{{ email_to }}"
      shadowExpire: "{{ usr_shadowExpire }}"
      shadowFlag: "{{ usr_shadowFlag }}"
      shadowLastChange: "{{ usr_shadowLastChange }}"
      shadowMax: "{{ usr_shadowMax }}"
      shadowMin: "{{ usr_shadowMin }}"
      shadowWarning: "{{ usr_shadowWarning }}"
      title: "{{ user_name }}"
    server_uri: "{{ ldap_server_uri }}"
    bind_dn: "{{ bind_dn }}"
    bind_pw: "{{ bind_pw }}"

- name: Add ssh key ids
  ldap_attr:
    dn: uid={{ user_name }},ou={{employee_type}},{{ usr_base_dn }}
    name: "sshPublicKey"
    values: "{{ ssh_pub_key }}"
    state: present
    server_uri: "{{ ldap_server_uri }}"
    bind_dn: "{{ bind_dn }}"
    bind_pw: "{{ bind_pw }}"
  when:
    - usr_pwd == "sshkey"
